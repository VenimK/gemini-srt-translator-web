name: Test and Release

on:
  push:
    branches: [ main ]
  release:
    types: [created]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        # Explicitly install pytest
        pip install pytest
        # Create necessary directories
        mkdir -p temp_uploads
        touch .env  # Create empty .env file for testing
        # Verify pytest is installed
        python -m pytest --version
    
    - name: Run tests
      run: |
        python -m pytest -v
      env:
        GEMINI_API_KEY: test_key  # Mock API key for testing

  create-release:
    name: Create Release
    needs: test
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Get version
      id: version
      run: |
        # Get the latest tag or use 1.0.0 if none exists
        VERSION=$(git describe --tags --abbrev=0 2>/dev/null || echo "1.0.0")
        # Remove 'v' prefix if present
        VERSION=${VERSION#v}
        # If still no version, use 1.0.0
        [[ -z "$VERSION" ]] && VERSION="1.0.0"
        echo "version=$VERSION" >> $GITHUB_OUTPUT
    
    - name: Create release
      uses: ncipollo/release-action@v1
      with:
        tag: v${{ steps.version.outputs.version }}
        name: "Release v${{ steps.version.outputs.version }}"
        body: |
          ## How to Use
          1. Download the zip file
          2. Extract it
          3. Install dependencies: `pip install -r requirements.txt`
          4. Run: `python main.py`
        
          ### Configuration
          - Copy `.env.example` to `.env` and set your API keys
          - Configure settings in `config.json`
        draft: false
        prerelease: false
        token: ${{ secrets.GITHUB_TOKEN }}
